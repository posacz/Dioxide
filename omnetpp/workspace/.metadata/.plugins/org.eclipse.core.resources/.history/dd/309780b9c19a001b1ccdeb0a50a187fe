[Config Chord]
description = Chord (iterative, SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"

[Config ChordInet]
description = Chord (iterative, InetUnderlayNetwork)
network = oversim.underlay.inetunderlay.InetUnderlayNetwork
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
InetUnderlayNetwork.backboneRouterNum = 1
InetUnderlayNetwork.overlayAccessRouterNum = 1
InetUnderlayNetwork.accessRouterNum = 1

# IPv6 support ist broken in inet-20111118

#[Config ChordInet6]
#description = Chord (iterative, InetUnderlayNetwork6)
#network = oversim.underlay.inetunderlay.InetUnderlayNetwork6
#*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
#**.overlayType = "oversim.overlay.chord.ChordModules"
#**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
#InetUnderlayNetwork.backboneRouterNum = 1
#InetUnderlayNetwork.overlayAccessRouterNum = 1
#InetUnderlayNetwork.accessRouterNum = 1

[Config ChordReaSE]
# You need to install the ReaSE framework and change the ned-path in
# default.ini to enable ReaSE background traffic !
description = Chord (ReaSEUnderlayNetwork)
network = oversim.underlay.reaseunderlay.topologies.topology_example.ReaSEUnderlayNetwork
**.TerminalConnector.channelTypes = "oversim.underlay.reaseunderlay.topologies.topology_example.host2edge"
**.TerminalConnector.channelTypesRx = "oversim.underlay.reaseunderlay.topologies.topology_example.edge2host"
**.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
num-rngs = 5 # set num-rngs to 5 if using ReaSE framework

[Config ChordSimpleSemi]
description = Chord (semi-recursive, SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.routingType = "semi-recursive"

[Config ChordFastStab]
description = Chord (semi-recursive, SimpleUnderlayNetwork, faster stabilize)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.routingType = "semi-recursive"
**.overlay.chord.stabilizeDelay = 5s
**.overlay.chord.fixfingersDelay = 60s

[Config ChordLarge]
description = Chord (semi-recursive, SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.measurementTime = 500s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.routingType = "semi-recursive"
**.churnGeneratorTypes = "oversim.common.NoChurn"
**.targetOverlayTerminalNum = 10000
**.initPhaseCreationInterval = 0.1s
**.debugOutput = false

[Config Kademlia]
description = Kademlia (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.kademlia.KademliaModules"
#**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.tier1Type = "oversim.applications.myapplication.MyApplicationModules"
**.routingType = "iterative"

[Config KademliaLarge]
description = Kademlia (SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.measurementTime = 500s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.kademlia.KademliaModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 1000
**.initPhaseCreationInterval = 0.1s
**.overlay.kademlia.lookupRedundantNodes = 16
**.overlay.kademlia.s = 8
**.overlay.kademlia.k = 16
**.overlay.kademlia.lookupMerge = true
**.overlay.kademlia.lookupParallelPaths = 1
**.overlay.kademlia.lookupParallelRpcs = 1

[Config Pastry]
description = Pastry (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.pastry.PastryModules"
**.enableNewLeafs = false
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 30
**.measureNetwInitPhase = false
**.useCommonAPIforward = true
**.neighborCache.enableNeighborCache = true

[Config PastryLarge]
description = Pastry (SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.overlay.pastry.PastryModules"
**.enableNewLeafs = false
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 1000
**.neighborCache.enableNeighborCache = true

[Config Bamboo]
description = Bamboo (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.measurementTime = 5000s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.bamboo.BambooModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 100
**.initPhaseCreationInterval = 5s
**.neighborCache.enableNeighborCache = true

[Config BambooLarge]
description = Bamboo (SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.measurementTime = 2000s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.bamboo.BambooModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 1000
**.initPhaseCreationInterval = 0.1s
**.neighborCache.enableNeighborCache = true

[Config Koorde]
description = Koorde (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.koorde.KoordeModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.routingType = "iterative"

[Config KoordeLarge]
description = Koorde (SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.measurementTime = 1000s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.koorde.KoordeModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 1000
**.debugOutput = false

[Config Broose]
description = Broose (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.broose.BrooseModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.overlay.brooseShiftingBits = 2

[Config BrooseLarge]
description = Broose (SimpleUnderlayNetwork, no churn, large-scale test -> run without GUI)
**.measurementTime = 1000s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.broose.BrooseModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.overlay.brooseShiftingBits = 2
**.targetOverlayTerminalNum = 1000
**.initPhaseCreationInterval = 0.1s
**.debugOutput = false

[Config Accordion]
description = Accordion (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.accordion.AccordionModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"

[Config Gia]
description = Gia (SimpleUnderlayNetwork, SearchApp)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.gia.GiaModules"
**.tier1Type = "oversim.applications.giasearchapp.GIASearchAppModules"
**.targetOverlayTerminalNum = 10
**.overlay.gia.maxNeighbors = 3
**.overlay.gia.minNeighbors = 3

[Config GiaLarge]
description = Gia (SimpleUnderlayNetwork, large-scale test -> run without GUI)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.gia.GiaModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.targetOverlayTerminalNum = 1000
**.initPhaseCreationInterval = 0.1s

[Config ChordDht]
description = Chord DHT (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.lifetimeMean = 10000s
**.measurementTime = 1000s
**.transitionTime = 100s
**.overlayType = "oversim.overlay.chord.ChordModules"
**.numTiers = 2
**.tier1Type = "oversim.applications.dht.DHTModules"
**.tier2Type = "oversim.tier2.dhttestapp.DHTTestAppModules"
**.globalObserver.globalFunctions[0].functionType = "oversim.tier2.dhttestapp.GlobalDhtTestMap"
**.globalObserver.numGlobalFunctions = 1
**.targetOverlayTerminalNum = 100
**.initPhaseCreationInterval = 0.1s
**.debugOutput = false
**.drawOverlayTopology = true
**.tier1*.dht.numReplica = 4

[Config ChordDhtTrace]
description = Chord/DHT trace test (SimpleUnderlayNetwork)
**.overlayType = "oversim.overlay.chord.ChordModules"
**.numTiers = 2
**.tier1Type = "oversim.applications.dht.DHTModules"
**.tier2Type = "oversim.tier2.dhttestapp.DHTTestAppModules"
**.globalObserver.globalFunctions[0].functionType = "oversim.tier2.dhttestapp.GlobalDhtTestMap"
**.globalObserver.numGlobalFunctions = 1
**.tier2.dhtTestApp.testInterval = 0s
**.churnGeneratorTypes = "oversim.common.TraceChurn"
**.traceFile = "dht.trace"

[Config i3Chord]
description = I3 Anycast over Chord (SimpleUnderlayNetwork, no churn)
**.churnGeneratorTypes = "oversim.common.NoChurn oversim.common.NoChurn"
**.churnGenerator[0].targetOverlayTerminalNum = 6
**-0[*].overlayType = "oversim.overlay.chord.ChordModules"
**-0[*].tier1Type = "oversim.applications.i3.OverlayI3"
**.churnGenerator[1].targetOverlayTerminalNum = 6
**-1[*].overlayType = "oversim.applications.i3.OverlayDummyModules"
**-1[*].tier1Type = "oversim.applications.i3.i3Apps.I3Anycast"

[Config i3Pastry]
description = I3 Multicast over Pastry (SimpleUnderlayNetwork, no churn)
**.churnGeneratorTypes = "oversim.common.NoChurn oversim.common.NoChurn"
**.churnGenerator[0].targetOverlayTerminalNum = 6
**-0[*].overlayType = "oversim.overlay.pastry.PastryModules"
**-0[*].tier1Type = "oversim.applications.i3.OverlayI3"
**.churnGenerator[1].targetOverlayTerminalNum = 6
**-1[*].overlayType = "oversim.applications.i3.OverlayDummyModules"
**-1[*].tier1Type = "oversim.applications.i3.i3Apps.I3Multicast"
**.neighborCache.enableNeighborCache = true

[Config i3Anycast]
description = I3 Anycast over Chord (combined I3Server/I3Client, SimpleUnderlayNetwork)
**.numTiers = 2
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.i3.OverlayI3"
**.tier2Type = "oversim.applications.i3.i3Apps.I3Anycast"
**.targetOverlayTerminalNum = 6

[Config Scribe]
description = Scribe Test (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.measureNetwInitPhase = true
**.overlayType = "oversim.overlay.pastry.PastryModules"
**.tier1Type = "oversim.applications.scribe.MulticastScribe"
**.tier2Type = "oversim.applications.almtest.ALMTestModule"
**.numTiers = 2
**.overlay*.pastry.useCommonAPIforward = true
**.overlay*.pastry.enableNewLeafs = true
**.neighborCache.enableNeighborCache = true
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.applications.almtest.MessageObserverModule"

[Config Partition]
description = Chord Partition Test (SimpleUnderlayNetwork)
**.churnGeneratorTypes = "oversim.common.NoChurn oversim.common.NoChurn"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.traceFile = "partition.trace"
**.globalStatistics.globalStatTimerInterval = 10s
**.tier*.kbrTestApp.testMsgInterval = 10s
*.churnGenerator[0].targetOverlayTerminalNum = 10
*.churnGenerator[1].targetOverlayTerminalNum = 10
*.overlayTerminal-1[*].**.overlayId = 1
#*.overlayTerminal-1[0].overlay*.*.nodeId = "123ffff123"
**.overlay*.chord.mergeOptimizationL1 = true
**.overlay*.chord.mergeOptimizationL2 = true
**.overlay*.chord.mergeOptimizationL3 = true
**.overlay*.chord.mergeOptimizationL4 = true
**.bootstrapList.maintainList = true
**.bootstrapList.mergeOverlayPartitions = true

[Config ChurnVisualization]
description = "Chord Churn Visualization"
**.overlayType = "oversim.overlay.chord.ChordModules"
**.tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.RandomChurn oversim.common.NoChurn"
**.overlay*.chord.routingType = "semi-recursive"
*.churnGenerator[0].targetMobilityDelay=300s
*.churnGenerator[0].targetMobilityDelay2=7s
*.churnGenerator[0].churnChangeInterval=7000s
**.globalObserver.globalStatistics.globalStatTimerInterval = 120s
*.churnGenerator[1].targetOverlayTerminalNum = 1

[Config MultiOverlay]
description = Chord with MultiOverlayHosts (recursive, SimpleUnderlayNetwork)
**.churnGeneratorTypes = "oversim.common.RandomChurn oversim.common.RandomChurn"
**.terminalTypes = "oversim.underlay.simpleunderlay.SimpleOverlayHost oversim.underlay.simpleunderlay.SimpleMultiOverlayHost"
**.numOverlayModulesPerNode = 5
**.routingType = "semi-recursive"
**.churnGenerator[0].targetOverlayTerminalNum = 100
**-0[*].overlayType = "oversim.overlay.chord.ChordModules"
**-0[*].tier1Type = "oversim.applications.kbrtestapp.KBRTestAppModules"
**.churnGenerator[1].targetOverlayTerminalNum = 5
**-1[*].overlayType = "oversim.overlay.chord.ChordModules"
**-1[*].tier1Type = "oversim.common.TierDummy"

[Config SimMud]
description = SimMud Test (SimpleUnderlayNetwork)
**.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.measureNetwInitPhase = true
**.overlayType = "oversim.overlay.pastry.PastryModules"
**.tier1Type = "oversim.applications.scribe.MulticastScribe"
**.tier2Type = "oversim.tier2.simmud.SimMudModules"
**.tier3Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
**.numTiers = 3
**.overlay*.pastry.useCommonAPIforward = true
**.overlay*.pastry.enableNewLeafs = true
**.globalObserver.globalFunctions[0].functionType = "oversim.applications.simplegameclient.GlobalCoordinatorModules"
**.globalObserver.numGlobalFunctions = 1
**.neighborCache.enableNeighborCache = true

[Config NTree]
description = NTree Test (SimpleUnderlayNetwork)
**.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.ntree.NTreeModules"
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
**.globalObserver.globalFunctions[0].functionType = "oversim.applications.simplegameclient.GlobalCoordinatorModules"
**.globalObserver.numGlobalFunctions = 1
**.maxChildren = 5
**.areaDimension = 200

[Config PubSubMMOG]
description = PubSubMMOG Test (SimpleUnderlayNetwork)
**.churnGeneratorTypes = "oversim.common.NoChurn oversim.common.LifetimeChurn"
**.churnGenerator[0].targetOverlayTerminalNum = 1
**-0[*].overlayType = "oversim.overlay.pubsubmmog.OverlayPubSubLobby"
**-0[*].tier1Type = "oversim.common.TierDummy"
**-1[*].overlayType = "oversim.overlay.pubsubmmog.OverlayPubSubMMOG"
**-1[*].tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
**.areaDimension = 200
**.numSubspaces = 2
**.joinOnApplicationRequest = true
**.maxChildren = 5
**.parentTimeout = 2s
**.globalObserver.globalFunctions[0].functionType = "oversim.applications.simplegameclient.GlobalCoordinatorModules"
**.globalObserver.numGlobalFunctions = 1

[Config Vast]
description = VAST (SimpleUnderlayNetwork, RandomRoaming)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.vast.OverlayVast"
**.targetOverlayTerminalNum = 128
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
**.areaDimension = 1000.0
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.overlay.vast.GlobalVastModules"

[Config Quon]
description = Quon (SimpleUnderlayNetwork, RandomRoaming)
**.overlayType = "oversim.overlay.quon.OverlayQuon"
**.targetOverlayTerminalNum = 256
**.areaDimension = 5000.0
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.overlay.quon.GlobalQuonModules"

[Config QuonLoginCache]
description = Quon (SimpleUnderlayNetwork, RandomRoaming)
**.overlayType = "oversim.overlay.quon.OverlayQuon"
**.targetOverlayTerminalNum = 256
**.areaDimension = 5000.0
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.overlay.quon.GlobalQuonModulesLC"
**.addJoinDelay = 80ms
**.movementSpeed = 5mps

[Config QuonGroup]
description = Quon (SimpleUnderlayNetwork, GroupRoaming)
**.overlayType = "oversim.overlay.quon.OverlayQuon"
**.targetOverlayTerminalNum = 256
**.areaDimension = 5000.0
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
**.tier1.*.movementGenerator = "groupRoaming"
**.tier1.*.groupSize = 16
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.overlay.quon.GlobalQuonModules"

[Config QuonDynAoi]
description = Quon (SimpleUnderlayNetwork, GroupRoaming, DynamicAOI)
**.overlayType = "oversim.overlay.quon.OverlayQuon"
**.overlay.*.connectionLimit = 20
**.targetOverlayTerminalNum = 256
**.minAOIWidth = 10.0
**.areaDimension = 5000.0
**.tier1Type = "oversim.applications.simplegameclient.SimpleGameClientModules"
**.tier1.*.movementGenerator = "groupRoaming"
**.tier1.*.groupSize = 16
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.overlay.quon.GlobalQuonModules"

[Config Nice]
description = NICE (SimpleUnderlayNetwork)
# First node (=rendezvous point) should never be churned out!
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn oversim.common.ParetoChurn"
*.churnGenerator[0].targetOverlayTerminalNum = 1
**-0[*].overlayType = "oversim.overlay.nice.NiceModules"
**-0[*].tier1Type = "oversim.applications.almtest.ALMTestModule"
**-1[*].overlayType = "oversim.overlay.nice.NiceModules"
**-1[*].tier1Type = "oversim.applications.almtest.ALMTestModule"
*.churnGenerator[1].initPhaseCreationInterval = 3s
*.churnGenerator[1].targetOverlayTerminalNum = 128
*.churnGenerator[1].lifetimeMean = 1800s
*.churnGenerator[1].deadtimeMean = 1800s

**.almTest.joinGroups = false
**.neighborCache.enableNeighborCache = true
SimpleUnderlayNetwork.overlayTerminal[*].udp.jitter = 0.05
*.globalObserver.numGlobalFunctions = 1
*.globalObserver.globalFunctions[0].functionType = "oversim.applications.almtest.MessageObserverModule"

[Config MyConfig]
description = MyApplication / MyOverlay (Example from the OverSim website)
**.overlayType = "oversim.overlay.myoverlay.MyOverlayModules"
**.tier1Type = "oversim.applications.myapplication.MyApplicationModules"
**.targetOverlayTerminalNum = 10
**.enableDrops = false
**.dropChance = 0
**.sendPeriod = 1s
**.numToSend = 1
**.largestKey = 10

[Config TCPExampleApp]
description = TCPExampleApp (InetUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.applications.i3.OverlayDummyModules"
**.tier1Type = "oversim.applications.tcpexampleapp.TCPExampleAppModules" 
**.targetOverlayTerminalNum = 2

[Config Dioxide]
description = Dioxide (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.LifetimeChurn"
**.overlayType = "oversim.overlay.kademlia.KademliaModules"
**.tier1Type = "oversim.applications.dioxide.DioxideModules"
**.routingType = "iterative"

[Config MonoxideSmall]
description = Monoxide Small (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.overlay.monoxideoverlay.MonoxideOverlayModules"
**.initPhaseCreationInterval = 0.1s
**.tier1Type = "oversim.applications.monoxide.MonoxideModules"
**.routingType = "iterative"
**.block_interval = 15000 # 30s
**.block_size = 32 # 32kB
**.transaction_size = 128 # 128B
**.n_coordinators = 2 # 2 mining facilities total
**.n_full_nodes = 1 # 1 full node per zone (64 full nodes in one mining facility)

**.sharding_scale = 1 # 1<<1 = 2 zones
**.n_miners = 2 # 2 miners in one mining facility
**.targetOverlayTerminalNum = 10 # total (2 full nodes + 2 miners + 1 coordinator) * 2 mining facilities

**.overlay*.*.keyLength = 4
**.overlay*.monoxideoverlay.k = 16
**.overlay*.monoxideoverlay.s = 8

SimpleUnderlayNetwork.churnGenerator*.channelTypes = "oversim.common.simple_ethernetline" # ethernet nodes without access delay (defined in common/channels.ned)
SimpleUnderlayNetwork.underlayConfigurator.sendQueueLength = 10MiB # set send queue to be enough big that no packet will be dropped
SimpleUnderlayNetwork.overlayTerminal*.udp.constantDelay = 50ms # end to end udp delay
SimpleUnderlayNetwork.overlayTerminal*.udp.jitter = 0.1 # 10% jitter

[Config Monoxide]
description = Monoxide (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.overlay.monoxideoverlay.MonoxideOverlayModules"
**.initPhaseCreationInterval = 0.1s
**.tier1Type = "oversim.applications.monoxide.MonoxideModules"
**.routingType = "iterative"
**.block_interval = 15000 # 15s
**.block_size = 32 # 32kB
**.transaction_size = 128 # 128B
**.n_coordinators = 24 # 24 mining facilities total
**.n_full_nodes = 1 # 1 full node per zone (64 full nodes in one mining facility)

**.sharding_scale = 6 # 1<<6 = 64 zones
**.n_miners = 32 # 32 miners in one mining facility (average 12 miners per zone)
**.targetOverlayTerminalNum = 2328 # total (64 full nodes + 32 miners + 1 coordinator) * 24 mining facilities

**.overlay*.*.keyLength = 12
**.overlay*.monoxideoverlay.k = 16
**.overlay*.monoxideoverlay.s = 8

SimpleUnderlayNetwork.churnGenerator*.channelTypes = "oversim.common.simple_ethernetline" # ethernet nodes without access delay (defined in common/channels.ned)
SimpleUnderlayNetwork.underlayConfigurator.sendQueueLength = 10MiB # set send queue to be enough big that no packet will be dropped
SimpleUnderlayNetwork.overlayTerminal*.udp.constantDelay = 50ms # end to end udp delay
SimpleUnderlayNetwork.overlayTerminal*.udp.jitter = 0.1 # 10% jitter

[Config MonoxideParam]
description = Monoxide (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.overlay.monoxideoverlay.MonoxideOverlayModules"
**.initPhaseCreationInterval = 0.1s
**.tier1Type = "oversim.applications.monoxide.MonoxideModules"
**.routingType = "iterative"
**.block_interval = 15000 # 15s, 12s, 9s, 6s, 3s
**.block_size = 32 # 32kB, 64KB, 128KB, 256KB, 512KB, 1024KB
**.transaction_size = 128 # 128B
**.n_coordinators = 24 # 24 mining facilities total
**.n_full_nodes = 1 # 1 full node per zone (1752 full nodes in one mining facility)

**.sharding_scale = 4 # 0, 1, 2, 3, 4, 5, 6
**.n_miners = 8 # 8 miners in one mining facility
**.targetOverlayTerminalNum = 600 #240, 264, 312, 408, 600, 984, 1752 # total (16 full nodes + 8 miners + 1 coordinator) * 24 mining facilities

**.overlay.monoxideoverlay.lookupRedundantNodes = 16
**.overlay.monoxideoverlay.lookupMerge = true
**.overlay.monoxideoverlay.lookupParallelPaths = 1
**.overlay.monoxideoverlay.lookupParallelRpcs = 1
**.overlay.monoxideoverlay.k = 64
**.overlay.monoxideoverlay.s = 1

SimpleUnderlayNetwork.churnGenerator*.channelTypes = "oversim.common.simple_ethernetline" # ethernet nodes without access delay (defined in common/channels.ned)
SimpleUnderlayNetwork.underlayConfigurator.sendQueueLength = 100MiB # set send queue to be enough big that no packet will be dropped
SimpleUnderlayNetwork.overlayTerminal*.udp.constantDelay = 50ms # end to end udp delay
SimpleUnderlayNetwork.overlayTerminal*.udp.jitter = 0.1 # 10% jitter

[Config DioxideParam]
description = Dioxide (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.overlay.monoxideoverlay.MonoxideOverlayModules"
**.initPhaseCreationInterval = 0.1s
**.tier1Type = "oversim.applications.dioxide.DioxideModules"
**.routingType = "iterative"
**.time_slot = 15000 # 15s
**.block_size = 32 # 32kB
**.transaction_size = 128 # 128B
**.n_validators = 24 # 24 validators
**.n_full_nodes = 1 # 1 full node per zone

**.sharding_scale = 0 # 0, 1, 2, 3, 4, 5, 6
**.targetOverlayTerminalNum = 24 # 24, 48, 96, 192, 384, 768, 1536 # total (n_validators * n_zones)

**.overlay.monoxideoverlay.lookupRedundantNodes = 16
**.overlay.monoxideoverlay.lookupMerge = true
**.overlay.monoxideoverlay.lookupParallelPaths = 1
**.overlay.monoxideoverlay.lookupParallelRpcs = 1
**.overlay.monoxideoverlay.k = 64
**.overlay.monoxideoverlay.s = 1

SimpleUnderlayNetwork.churnGenerator*.channelTypes = "oversim.common.simple_ethernetline" # ethernet nodes without access delay (defined in common/channels.ned)
SimpleUnderlayNetwork.underlayConfigurator.sendQueueLength = 100MiB # set send queue to be enough big that no packet will be dropped
SimpleUnderlayNetwork.overlayTerminal*.udp.constantDelay = 50ms # end to end udp delay
SimpleUnderlayNetwork.overlayTerminal*.udp.jitter = 0.1 # 10% jitter

[Config DioxideSmall]
description = Dioxide (SimpleUnderlayNetwork)
*.underlayConfigurator.churnGeneratorTypes = "oversim.common.NoChurn"
**.overlayType = "oversim.overlay.monoxideoverlay.MonoxideOverlayModules"
**.initPhaseCreationInterval = 0.1s
**.tier1Type = "oversim.applications.dioxide.DioxideModules"
**.routingType = "iterative"
**.time_slot = 15000 # 15s
**.block_size = 32 # 32kB
**.transaction_size = 128 # 128B
**.n_validators = 2 # 2 validators
**.n_full_nodes = 1 # 1 full node per zone

**.sharding_scale = 1 # 2 zones
**.targetOverlayTerminalNum = 4 

**.overlay*.*.keyLength = 4
**.overlay*.monoxideoverlay.k = 16
**.overlay*.monoxideoverlay.s = 8

SimpleUnderlayNetwork.churnGenerator*.channelTypes = "oversim.common.simple_ethernetline" # ethernet nodes without access delay (defined in common/channels.ned)
SimpleUnderlayNetwork.underlayConfigurator.sendQueueLength = 100MiB # set send queue to be enough big that no packet will be dropped
SimpleUnderlayNetwork.overlayTerminal*.udp.constantDelay = 50ms # end to end udp delay
SimpleUnderlayNetwork.overlayTerminal*.udp.jitter = 0.1 # 10% jitter

include ./default.ini
